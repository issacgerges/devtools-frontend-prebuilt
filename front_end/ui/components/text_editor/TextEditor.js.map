{"version":3,"file":"TextEditor.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/text_editor/TextEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as CodeHighlighter from '../code_highlighter/code_highlighter.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\n\nimport {baseConfiguration, dynamicSetting} from './config.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-text-editor': TextEditor;\n  }\n}\n\nexport class TextEditor extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-text-editor`;\n\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private activeEditor: CodeMirror.EditorView|undefined = undefined;\n  private activeSettingListeners: [Common.Settings.Setting<unknown>, (event: {data: unknown}) => void][] = [];\n  private pendingState: CodeMirror.EditorState|undefined;\n\n  constructor(pendingState?: CodeMirror.EditorState) {\n    super();\n    this.pendingState = pendingState;\n    this.shadow.adoptedStyleSheets = [CodeHighlighter.Style.default];\n  }\n\n  private createEditor(): CodeMirror.EditorView {\n    this.activeEditor = new CodeMirror.EditorView({\n      state: this.updateDynamicSettings(this.state),\n      parent: this.shadow,\n      root: this.shadow,\n    });\n    return this.activeEditor;\n  }\n\n  get editor(): CodeMirror.EditorView {\n    return this.activeEditor || this.createEditor();\n  }\n\n  get state(): CodeMirror.EditorState {\n    if (this.activeEditor) {\n      return this.activeEditor.state;\n    }\n    if (!this.pendingState) {\n      this.pendingState = CodeMirror.EditorState.create({extensions: baseConfiguration('')});\n    }\n    return this.pendingState;\n  }\n\n  set state(state: CodeMirror.EditorState) {\n    if (this.activeEditor) {\n      this.activeEditor.setState(state);\n    } else {\n      this.pendingState = state;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.activeEditor) {\n      this.createEditor();\n    }\n    this.registerSettingHandlers();\n  }\n\n  disconnectedCallback(): void {\n    if (this.activeEditor) {\n      this.pendingState = this.activeEditor.state;\n      this.activeEditor.destroy();\n      this.activeEditor = undefined;\n    }\n    for (const [setting, listener] of this.activeSettingListeners) {\n      setting.removeChangeListener(listener);\n    }\n    this.activeSettingListeners = [];\n  }\n\n  private updateDynamicSettings(state: CodeMirror.EditorState): CodeMirror.EditorState {\n    const settings = Common.Settings.Settings.instance();\n    const changes = [];\n    for (const opt of state.facet(dynamicSetting)) {\n      const mustUpdate = opt.sync(state, settings.moduleSetting(opt.settingName).get());\n      if (mustUpdate) {\n        changes.push(mustUpdate);\n      }\n    }\n    return changes.length ? state.update({effects: changes}).state : state;\n  }\n\n  private registerSettingHandlers(): void {\n    const settings = Common.Settings.Settings.instance();\n    for (const opt of this.state.facet(dynamicSetting)) {\n      const handler = ({data}: {data: unknown}): void => {\n        const change = opt.sync(this.state, data);\n        if (change && this.activeEditor) {\n          this.activeEditor.dispatch({effects: change});\n        }\n      };\n      const setting = settings.moduleSetting(opt.settingName);\n      setting.addChangeListener(handler);\n      this.activeSettingListeners.push([setting, handler]);\n    }\n  }\n\n  revealPosition(position: number): void {\n    const view = this.activeEditor;\n    if (!view) {\n      return;\n    }\n\n    const line = view.state.doc.lineAt(position);\n    view.dispatch({\n      selection: CodeMirror.EditorSelection.cursor(position),\n      scrollIntoView: true,\n      effects:\n          [view.state.field(highlightState, false) ?\n               setHighlightLine.of(line.from) :\n               CodeMirror.StateEffect.appendConfig.of(highlightState.init(() => highlightDeco(line.from)))],\n    });\n    const {id} = view.state.field(highlightState);\n    // Reset the highlight state if, after 2 seconds (the animation\n    // duration) it is still showing this highlight.\n    setTimeout(() => {\n      if (view.state.field(highlightState).id === id) {\n        view.dispatch({effects: setHighlightLine.of(null)});\n      }\n    }, 2000);\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-text-editor', TextEditor);\n\nconst setHighlightLine = CodeMirror.StateEffect.define<number|null>(\n    {map: (value, mapping) => value === null ? null : mapping.mapPos(value)});\n\nfunction highlightDeco(position: number): {deco: CodeMirror.DecorationSet, id: number} {\n  const deco = CodeMirror.Decoration.set(\n      [CodeMirror.Decoration.line({attributes: {class: 'cm-highlightedLine'}}).range(position)]);\n  return {deco, id: Math.floor(Math.random() * 0xfffff)};\n}\n\nconst highlightState = CodeMirror.StateField.define<{deco: CodeMirror.DecorationSet, id: number}>({\n  create: () => ({deco: CodeMirror.Decoration.none, id: 0}),\n  update(value, tr) {\n    if (!tr.changes.empty && value.deco.size) {\n      value = {deco: value.deco.map(tr.changes), id: value.id};\n    }\n    for (const effect of tr.effects) {\n      if (effect.is(setHighlightLine)) {\n        value = effect.value === null ? {deco: CodeMirror.Decoration.none, id: 0} : highlightDeco(effect.value);\n      }\n    }\n    return value;\n  },\n  provide: field => CodeMirror.EditorView.decorations.from(field, value => value.deco),\n});\n"]}