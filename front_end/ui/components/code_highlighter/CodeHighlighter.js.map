{"version":3,"file":"CodeHighlighter.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/code_highlighter/CodeHighlighter.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAI7B,IAAI,cAAc,GAAmC,IAAI,CAAC;AAE1D,SAAS,QAAQ;IACf,OAAO,MAAM,CAAC,yDAAyD,CAAC,CAAC;AAC3E,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,KAAwB;IACxD,IAAI,CAAC,cAAc,EAAE;QACnB,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;QACrB,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC;YAC3C,EAAC,GAAG,EAAE,CAAC,CAAC,YAAY,EAAE,KAAK,EAAE,gBAAgB,EAAC;YAC9C,EAAC,GAAG,EAAE,CAAC,CAAC,YAAY,EAAE,KAAK,EAAE,gBAAgB,EAAC;YAC9C,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,YAAY,EAAC;YAC/E,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,wBAAwB,EAAC;YACpF,EAAC,GAAG,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAC;YACtD,EAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,eAAe,EAAC;YAEzD,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAC;YAC3D,EAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,cAAc,EAAC;YACtC,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAC;YAC/E,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,YAAY,EAAC;YAEzD,EAAC,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,eAAe,EAAC;YACxC,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,eAAe,EAAC;YACnD,EAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,EAAC;YAClC,EAAC,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,eAAe,EAAC;YAExC,EAAC,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAC;YACpC,EAAC,GAAG,EAAE,CAAC,CAAC,aAAa,EAAE,KAAK,EAAE,iBAAiB,EAAC;YAChD,EAAC,GAAG,EAAE,CAAC,CAAC,cAAc,EAAE,KAAK,EAAE,uBAAuB,EAAC;YAEvD,EAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,gBAAgB,EAAC;YAC1C,EAAC,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,eAAe,EAAC;YACxC,EAAC,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,eAAe,EAAC;YACxC,EAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,EAAC;YAClC,EAAC,GAAG,EAAE,CAAC,CAAC,aAAa,EAAE,KAAK,EAAE,qBAAqB,EAAC;YACpD,EAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,cAAc,EAAC;YACtC,EAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,gBAAgB,EAAC;SAC3C,CAAC,CAAC;KACJ;IACD,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,MAAM,CAAC,IAAY,EAAE,QAAgB;IACzD,MAAM,EAAE,GAAG,MAAM,QAAQ,EAAE,CAAC;IAC5B,MAAM,QAAQ,GAAG,MAAM,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAClD,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAClH,OAAO,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AAC7C,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,IAAa,EAAE,QAAgB;IACjE,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;IACpC,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACjD,IAAI,CAAC,cAAc,EAAE,CAAC;IACtB,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;QACpC,IAAI,KAAK,GAAS,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,KAAK,EAAE;YACT,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,KAAK,GAAG,IAAI,CAAC;SACd;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,QAAgB;IACrD,MAAM,EAAE,GAAG,MAAM,QAAQ,EAAE,CAAC;IAE5B,QAAQ,QAAQ,EAAE;QAChB,KAAK,iBAAiB;YACpB,OAAO,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;QAC9C,KAAK,UAAU;YACb,OAAO,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,CAAC,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;QACzD,KAAK,iBAAiB;YACpB,OAAO,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;QAChE,KAAK,qBAAqB;YACxB,OAAO,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,CAAC,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;QAE3E,KAAK,UAAU,CAAC;QAChB,KAAK,aAAa;YAChB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QAEhC,KAAK,WAAW;YACd,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAElC,KAAK,iBAAiB;YACpB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QAEhC,KAAK,kBAAkB;YACrB,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAElC,KAAK,eAAe;YAClB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QAEhC,KAAK,aAAa;YAChB,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAElC,KAAK,kBAAkB;YACrB,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAElC,KAAK,yBAAyB;YAC5B,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QAEhC,KAAK,eAAe;YAClB,OAAO,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;QAEtC,KAAK,eAAe;YAClB,OAAO,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;QAE1C,KAAK,WAAW;YACd,OAAO,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;QAElD,KAAK,qBAAqB;YACxB,OAAO,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC;QAEzD,KAAK,gBAAgB;YACnB,OAAO,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QAEpD;YACE,OAAO,IAAI,CAAC;KACf;AACH,CAAC;AAED,MAAM,OAAO,eAAe;IACL;IAAuB;IAAwC;IAApF,YAAqB,IAAY,EAAW,IAAqB,EAAmB,KAAwB;QAAvF,SAAI,GAAJ,IAAI,CAAQ;QAAW,SAAI,GAAJ,IAAI,CAAiB;QAAmB,UAAK,GAAL,KAAK,CAAmB;IAC5G,CAAC;IAED,SAAS,CAAC,KAA4C;QACpD,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,cAAc,CAAC,IAAY,EAAE,EAAU,EAAE,KAA4C;QACnF,IAAI,GAAG,GAAG,IAAI,CAAC;QACf,MAAM,KAAK,GAAG,CAAC,EAAU,EAAE,KAAa,EAAQ,EAAE;YAChD,IAAI,EAAE,GAAG,GAAG,EAAE;gBACZ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;gBACvC,GAAG,GAAG,EAAE,CAAC;aACV;QACH,CAAC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE;YAC3F,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAChB,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QACnB,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QACb,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChB,CAAC;CACF","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\n\nlet highlightStyle: CodeMirror.HighlightStyle|null = null;\n\nfunction importCM(): Promise<typeof CodeMirror> {\n  return import('../../../third_party/codemirror.next/codemirror.next.js');\n}\n\nexport function getHighlightStyle(modCM: typeof CodeMirror): CodeMirror.HighlightStyle {\n  if (!highlightStyle) {\n    const t = modCM.tags;\n    highlightStyle = modCM.HighlightStyle.define([\n      {tag: t.variableName, class: 'token-variable'},\n      {tag: t.propertyName, class: 'token-property'},\n      {tag: [t.typeName, t.className, t.namespace, t.macroName], class: 'token-type'},\n      {tag: [t.special(t.name), t.constant(t.className)], class: 'token-variable-special'},\n      {tag: t.definition(t.name), class: 'token-definition'},\n      {tag: t.standard(t.variableName), class: 'token-builtin'},\n\n      {tag: [t.number, t.literal, t.unit], class: 'token-number'},\n      {tag: t.string, class: 'token-string'},\n      {tag: [t.special(t.string), t.regexp, t.escape], class: 'token-string-special'},\n      {tag: [t.atom, t.labelName, t.bool], class: 'token-atom'},\n\n      {tag: t.keyword, class: 'token-keyword'},\n      {tag: [t.comment, t.quote], class: 'token-comment'},\n      {tag: t.meta, class: 'token-meta'},\n      {tag: t.invalid, class: 'token-invalid'},\n\n      {tag: t.tagName, class: 'token-tag'},\n      {tag: t.attributeName, class: 'token-attribute'},\n      {tag: t.attributeValue, class: 'token-attribute-value'},\n\n      {tag: t.inserted, class: 'token-inserted'},\n      {tag: t.deleted, class: 'token-deleted'},\n      {tag: t.heading, class: 'token-heading'},\n      {tag: t.link, class: 'token-link'},\n      {tag: t.strikethrough, class: 'token-strikethrough'},\n      {tag: t.strong, class: 'token-strong'},\n      {tag: t.emphasis, class: 'token-emphasis'},\n    ]);\n  }\n  return highlightStyle;\n}\n\nexport async function create(code: string, mimeType: string): Promise<CodeHighlighter> {\n  const CM = await importCM();\n  const language = await languageFromMIME(mimeType);\n  const tree = language ? language.language.parser.parse(code) : new CM.Tree(CM.NodeType.none, [], [], code.length);\n  return new CodeHighlighter(code, tree, CM);\n}\n\nexport async function highlightNode(node: Element, mimeType: string): Promise<void> {\n  const code = node.textContent || '';\n  const highlighter = await create(code, mimeType);\n  node.removeChildren();\n  highlighter.highlight((text, style) => {\n    let token: Node = document.createTextNode(text);\n    if (style) {\n      const span = document.createElement('span');\n      span.className = style;\n      span.appendChild(token);\n      token = span;\n    }\n    node.appendChild(token);\n  });\n}\n\nexport async function languageFromMIME(mimeType: string): Promise<CodeMirror.LanguageSupport|null> {\n  const CM = await importCM();\n\n  switch (mimeType) {\n    case 'text/javascript':\n      return (await CM.javascript()).javascript();\n    case 'text/jsx':\n      return (await CM.javascript()).javascript({jsx: true});\n    case 'text/typescript':\n      return (await CM.javascript()).javascript({typescript: true});\n    case 'text/typescript-jsx':\n      return (await CM.javascript()).javascript({typescript: true, jsx: true});\n\n    case 'text/css':\n    case 'text/x-scss':\n      return (await CM.css()).css();\n\n    case 'text/html':\n      return (await CM.html()).html();\n\n    case 'application/xml':\n      return (await CM.xml()).xml();\n\n    case 'text/webassembly':\n      return (await CM.wast()).wast();\n\n    case 'text/x-c++src':\n      return (await CM.cpp()).cpp();\n\n    case 'text/x-java':\n      return (await CM.java()).java();\n\n    case 'application/json':\n      return (await CM.json()).json();\n\n    case 'application/x-httpd-php':\n      return (await CM.php()).php();\n\n    case 'text/x-python':\n      return (await CM.python()).python();\n\n    case 'text/markdown':\n      return (await CM.markdown()).markdown();\n\n    case 'text/x-sh':\n      return new CM.LanguageSupport(await CM.shell());\n\n    case 'text/x-coffeescript':\n      return new CM.LanguageSupport(await CM.coffeescript());\n\n    case 'text/x-clojure':\n      return new CM.LanguageSupport(await CM.clojure());\n\n    default:\n      return null;\n  }\n}\n\nexport class CodeHighlighter {\n  constructor(readonly code: string, readonly tree: CodeMirror.Tree, private readonly modCM: typeof CodeMirror) {\n  }\n\n  highlight(token: (text: string, style: string) => void): void {\n    this.highlightRange(0, this.code.length, token);\n  }\n\n  highlightRange(from: number, to: number, token: (text: string, style: string) => void): void {\n    let pos = from;\n    const flush = (to: number, style: string): void => {\n      if (to > pos) {\n        token(this.code.slice(pos, to), style);\n        pos = to;\n      }\n    };\n    this.modCM.highlightTree(this.tree, getHighlightStyle(this.modCM).match, (from, to, style) => {\n      flush(from, '');\n      flush(to, style);\n    }, from, to);\n    flush(to, '');\n  }\n}\n"]}